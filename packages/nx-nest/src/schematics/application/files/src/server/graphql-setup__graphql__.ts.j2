import { EnrichedException } from '@digiportal/nestjs-util'
import { GraphQLErrorParser } from '@digiportal/nestjs-util-graphql'
import { FastifyRequest, RequestGenericInterface } from 'fastify'
import { GraphQLError, GraphQLFormattedError } from 'graphql/error'

export async function graphQLContextParser ({ req }: { req: FastifyRequest<RequestGenericInterface> }): Promise<FastifyRequest<RequestGenericInterface> & Record<string, any>> {
  return { ...req }
}

export function graphQLErrorParser (exception: GraphQLError): GraphQLFormattedError<EnrichedException> {
    // to convert this to enriched exception,
    // graphql handles all the errors internally, graphql exception filter is just for catching the rest of the http errors
    return {
      ...GraphQLErrorParser(exception)
    }
}
